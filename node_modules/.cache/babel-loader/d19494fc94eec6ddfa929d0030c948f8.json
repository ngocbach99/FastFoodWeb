{"ast":null,"code":"import _objectSpread from \"D:\\\\React-redux-shopping-web-app-master (1)\\\\React-redux-shopping-web-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"D:\\\\React-redux-shopping-web-app-master (1)\\\\React-redux-shopping-web-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\React-redux-shopping-web-app-master (1)\\\\React-redux-shopping-web-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"D:\\\\React-redux-shopping-web-app-master (1)\\\\React-redux-shopping-web-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:\\\\React-redux-shopping-web-app-master (1)\\\\React-redux-shopping-web-app-master\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\React-redux-shopping-web-app-master (1)\\\\React-redux-shopping-web-app-master\\\\src\\\\views\\\\Checkout.jsx\";\nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { confirmOrder, setPromoCode } from \"../store/actions\";\nimport CheckoutCartProduct from \"../components/Checkout/CheckoutCartProduct\";\nimport PromoCodeForm from \"../components/Checkout/PromoCodeForm\";\nimport PromoCodeValue from \"../components/Checkout/PromoCodeValue\";\nimport CheckoutCartTotals from \"../components/Checkout/CheckoutCartTotals\";\nimport CustomerInputs from \"../components/Checkout/Forms/CustomerInputs\";\nimport DeliveryOptions from \"../components/Checkout/Forms/DeliveryOptions\";\nimport PaymentOptions from \"../components/Checkout/Forms/Payments/PaymentOptions\";\nimport Alert from \"../components/UI/Alert/Alert\";\nimport PropTypes from \"prop-types\";\nimport formValidator from \"../Utility/formValidation\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport { currencyToUse } from \"../Utility/currency\";\n\nvar Checkout = /*#__PURE__*/function (_Component) {\n  _inherits(Checkout, _Component);\n\n  var _super = _createSuper(Checkout);\n\n  function Checkout() {\n    var _this;\n\n    _classCallCheck(this, Checkout);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      promoCode: \"\",\n      showAlert: false,\n      alertType: \"\",\n      alertMessage: \"\",\n      paymentMethod: \"creditCard\",\n      shippingPrice: 300,\n      usedDeliveryOption: 1,\n      makeOrder: false,\n      correctCardInfo: false,\n      customerInfo: {\n        firstName: {\n          value: \"\",\n          valid: false,\n          touched: false,\n          errorsMsg: \"\"\n        },\n        secondName: {\n          value: \"\",\n          valid: false,\n          touched: false,\n          errorsMsg: \"\"\n        },\n        email: {\n          value: \"\",\n          valid: false,\n          touched: false,\n          errorsMsg: \"\"\n        }\n      }\n    };\n\n    _this.customerInfoChangeHandler = function (event, identifier) {\n      // use deep cloning to be able to get the values of nested objects\n      var customerInfo = _objectSpread({}, _this.state.customerInfo);\n\n      var customerInfoField = _objectSpread({}, customerInfo[identifier]);\n\n      customerInfoField.value = event.target.value;\n      var validationResults = formValidator(identifier, customerInfoField.value);\n      customerInfoField.valid = validationResults.isValid;\n      customerInfoField.errorsMsg = validationResults.errorsMsg;\n      customerInfoField.touched = true;\n      customerInfo[identifier] = customerInfoField;\n      var makeOrder = true;\n\n      for (var _identifier in customerInfo) {\n        makeOrder = customerInfo[_identifier].valid && makeOrder;\n      }\n\n      _this.setState({\n        customerInfo: customerInfo,\n        makeOrder: makeOrder\n      });\n    };\n\n    _this.promoCodeChangeHandler = function (event) {\n      _this.setState({\n        promoCode: event.target.value\n      });\n    };\n\n    _this.paymentOptionChangeHandler = function (event) {\n      if (event.target.value === \"creditCard\") {\n        _this.setState({\n          correctCardInfo: false\n        });\n      } else {\n        _this.setState({\n          correctCardInfo: true\n        });\n      }\n\n      _this.setState({\n        paymentMethod: event.target.value\n      });\n    };\n\n    _this.confirmOrderHandler = function (event) {\n      event.preventDefault();\n      var order = {};\n      order[\"cart\"] = _this.props.cartProductsProps;\n      order[\"user\"] = {\n        firstName: _this.state.customerInfo.firstName.value,\n        secondName: _this.state.customerInfo.secondName.value,\n        email: _this.state.customerInfo.email.value\n      };\n      order[\"usedPromoCode\"] = _this.state.promoCode;\n      order[\"currency\"] = _this.props.usedCurrencyProp;\n      order[\"paymentMethod\"] = _this.state.paymentMethod;\n      order[\"deliveryOption\"] = _this.state.usedDeliveryOption; // todo\n      // create stripe token for payments\n\n      _this.props.confirmOrderProp(order);\n    };\n\n    _this.setPromoCode = function (event) {\n      event.preventDefault(); // check promo code in state\n\n      var getPromoCode = _this.props.promoCodeProp.filter(function (codeName) {\n        return codeName.code === _this.state.promoCode;\n      });\n\n      if (getPromoCode.length > 0) {\n        _this.props.setPromoCodeProp(getPromoCode[0]);\n\n        _this.setState({\n          showAlert: true,\n          alertType: \"alert-success\",\n          alertMessage: \"The promo code you entered has given you a \".concat(getPromoCode[0].percentage, \"% discount on the total price.\")\n        });\n      } else {\n        _this.setState({\n          showAlert: true,\n          alertType: \"alert alert-danger\",\n          alertMessage: \"The Promo code you entered does not have discounts\"\n        });\n      }\n    };\n\n    _this.closeAlertHandler = function () {\n      _this.setState({\n        showAlert: !_this.state.showAlert,\n        alertType: \"\",\n        alertMessage: \"\"\n      });\n    };\n\n    _this.deliveryOptionChangeHandler = function (event) {\n      //get used delivery option from the state\n      var deliveryOption = _this.props.deliveryOptions.find(function (option) {\n        return option.id === parseInt(event.target.value);\n      });\n\n      if (deliveryOption) {\n        _this.setState({\n          usedDeliveryOption: parseInt(event.target.value),\n          shippingPrice: deliveryOption.cost\n        });\n      }\n    };\n\n    _this.creditCardHandler = function (element) {\n      if (element.complete) {\n        _this.setState({\n          correctCardInfo: true\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Checkout, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var productsPrices = [];\n      var chosenPaymentMethod = null;\n      var currencyKeys = currencyToUse(this.props.usedCurrencyProp);\n      var currencyValue = currencyKeys.value;\n      var cartProducts = this.props.cartProductsProps.map(function (cartProduct, index) {\n        // fetch product information from source based on id\n        var productFromStore = _this2.props.productsProps.find(function (product) {\n          return product.id === cartProduct.id;\n        });\n\n        productsPrices.push({\n          price: productFromStore.quantity > 0 ? Math.round(productFromStore.price * currencyValue) : 0,\n          count: cartProduct.quantity\n        });\n        return /*#__PURE__*/React.createElement(CheckoutCartProduct, {\n          key: index,\n          checkoutProductName: productFromStore.name,\n          checkoutProductCategory: productFromStore.category,\n          checkoutProductPrice: Math.round(productFromStore.price * currencyValue),\n          checkoutProductImage: productFromStore.img,\n          checkoutCartCount: cartProduct.quantity,\n          checkoutCartSize: cartProduct.size,\n          currency: _this2.props.usedCurrencyProp,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 11\n          }\n        });\n      });\n      var shippingPrice = this.state.shippingPrice ? Math.round(this.state.shippingPrice * currencyValue) : 0;\n      var productTotals = productsPrices.reduce(function (acc, el) {\n        return acc + el.price * el.count;\n      }, 0);\n      var vatPercentage = this.props.vatProps > 0 ? this.props.vatProps / 100 : 0;\n      var vat = productTotals > 0 ? Math.round(productTotals * vatPercentage) : 0;\n      var percentageDiscount = this.props.usedPromoCodeProp ? this.props.usedPromoCodeProp.percentage / 100 : 0;\n      var discountAmount = productTotals * percentageDiscount;\n      var shoppingTotal = productTotals > 0 ? productTotals + vat + shippingPrice - discountAmount : 0;\n\n      if (this.state.paymentMethod === \"creditCard\") {\n        chosenPaymentMethod = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-4 p-3 shop-card-field\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(CardElement, {\n          onChange: function onChange(element) {\n            return _this2.creditCardHandler(element);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 11\n          }\n        }));\n      } else if (this.state.paymentMethod === \"onDelivery\") {\n        chosenPaymentMethod = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ml-4 p-3\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 9\n          }\n        }, \"You will pay when the product is delivered to you.\");\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container py-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 7\n        }\n      }, this.props.cartTotalProps <= 0 ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 43\n        }\n      }) : null, this.state.showAlert ? /*#__PURE__*/React.createElement(Alert, {\n        alertType: this.state.alertType,\n        closeAlert: this.closeAlertHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }\n      }, this.state.alertMessage) : null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-4 order-md-2 mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"d-flex justify-content-between align-items-center mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"text-muted\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 15\n        }\n      }, \"Order Review\"), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"badge badge-secondary badge-pill\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }\n      }, this.props.cartTotalProps)), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"list-group mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }\n      }, cartProducts, this.props.usedPromoCodeProp ? /*#__PURE__*/React.createElement(PromoCodeValue, {\n        currency: this.props.usedCurrencyProp,\n        usedPromoCode: this.props.usedPromoCodeProp,\n        discountAmount: discountAmount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 17\n        }\n      }) : null, /*#__PURE__*/React.createElement(CheckoutCartTotals, {\n        productTotals: productTotals,\n        vat: vat,\n        shippingPrice: shippingPrice,\n        shoppingTotal: shoppingTotal,\n        currency: this.props.usedCurrencyProp,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 15\n        }\n      })), /*#__PURE__*/React.createElement(PromoCodeForm, {\n        setPromoCode: this.setPromoCode,\n        promoCodeChangeHandler: function promoCodeChangeHandler(event) {\n          return _this2.promoCodeChangeHandler(event);\n        },\n        promoCode: this.state.promoCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"col-md-8 order-md-1 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }\n      }, \"Billing Information\"), /*#__PURE__*/React.createElement(\"form\", {\n        className: \"shop-form shop-bg-white p-3\",\n        noValidate: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(CustomerInputs, {\n        customerInfo: this.state.customerInfo,\n        inputChanged: function inputChanged(event, identifier) {\n          return _this2.customerInfoChangeHandler(event, identifier);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }\n      }, \"Delivery Options\"), /*#__PURE__*/React.createElement(DeliveryOptions, {\n        currency: this.props.usedCurrencyProp,\n        deliveryOptions: this.props.deliveryOptions,\n        usedDeliveryOption: this.state.usedDeliveryOption,\n        deliveryOptionChanged: this.deliveryOptionChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 15\n        }\n      }, \"Payment Method\"), /*#__PURE__*/React.createElement(PaymentOptions, {\n        paymentMethod: this.state.paymentMethod,\n        paymentOptionChanged: this.paymentOptionChangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }\n      }, chosenPaymentMethod), /*#__PURE__*/React.createElement(\"hr\", {\n        className: \"mb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        disabled: !(this.state.makeOrder && this.state.correctCardInfo),\n        className: \"btn shop-btn-secondary btn-lg btn-block\",\n        onClick: function onClick(event) {\n          return _this2.confirmOrderHandler(event);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 15\n        }\n      }, \"Confirm Order\")))));\n    }\n  }]);\n\n  return Checkout;\n}(Component);\n\nCheckout.propTypes = {\n  productsProps: PropTypes.array.isRequired,\n  cartProductsProps: PropTypes.array.isRequired,\n  cartTotalProps: PropTypes.number.isRequired,\n  promoCodeProp: PropTypes.array,\n  usedPromoCodeProp: PropTypes.object,\n  deliveryOptions: PropTypes.array.isRequired,\n  usedCurrencyProp: PropTypes.object.isRequired,\n  vatProps: PropTypes.number\n};\nCheckout.defaultProps = {\n  shippingPriceProp: 0\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    productsProps: state.products,\n    cartProductsProps: state.cart,\n    cartTotalProps: state.cartTotal,\n    vatProps: state.vat,\n    promoCodeProp: state.promoCode,\n    usedPromoCodeProp: state.usedPromoCode,\n    deliveryOptions: state.deliveryOptions,\n    usedCurrencyProp: state.usedCurrency\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch, ownProps) {\n  return {\n    confirmOrderProp: function confirmOrderProp(order) {\n      return dispatch(confirmOrder(order, ownProps));\n    },\n    setPromoCodeProp: function setPromoCodeProp(promoCode, percentage) {\n      return dispatch(setPromoCode(promoCode, percentage));\n    }\n  };\n}; // inject stripe prop into the component\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectStripe(Checkout));","map":{"version":3,"sources":["D:/React-redux-shopping-web-app-master (1)/React-redux-shopping-web-app-master/src/views/Checkout.jsx"],"names":["React","Component","Redirect","connect","confirmOrder","setPromoCode","CheckoutCartProduct","PromoCodeForm","PromoCodeValue","CheckoutCartTotals","CustomerInputs","DeliveryOptions","PaymentOptions","Alert","PropTypes","formValidator","CardElement","injectStripe","currencyToUse","Checkout","state","promoCode","showAlert","alertType","alertMessage","paymentMethod","shippingPrice","usedDeliveryOption","makeOrder","correctCardInfo","customerInfo","firstName","value","valid","touched","errorsMsg","secondName","email","customerInfoChangeHandler","event","identifier","customerInfoField","target","validationResults","isValid","setState","promoCodeChangeHandler","paymentOptionChangeHandler","confirmOrderHandler","preventDefault","order","props","cartProductsProps","usedCurrencyProp","confirmOrderProp","getPromoCode","promoCodeProp","filter","codeName","code","length","setPromoCodeProp","percentage","closeAlertHandler","deliveryOptionChangeHandler","deliveryOption","deliveryOptions","find","option","id","parseInt","cost","creditCardHandler","element","complete","productsPrices","chosenPaymentMethod","currencyKeys","currencyValue","cartProducts","map","cartProduct","index","productFromStore","productsProps","product","push","price","quantity","Math","round","count","name","category","img","size","productTotals","reduce","acc","el","vatPercentage","vatProps","vat","percentageDiscount","usedPromoCodeProp","discountAmount","shoppingTotal","cartTotalProps","propTypes","array","isRequired","number","object","defaultProps","shippingPriceProp","mapStateToProps","products","cart","cartTotal","usedPromoCode","usedCurrency","mapDispatchToProps","dispatch","ownProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { confirmOrder, setPromoCode } from \"../store/actions\";\nimport CheckoutCartProduct from \"../components/Checkout/CheckoutCartProduct\";\nimport PromoCodeForm from \"../components/Checkout/PromoCodeForm\";\nimport PromoCodeValue from \"../components/Checkout/PromoCodeValue\";\nimport CheckoutCartTotals from \"../components/Checkout/CheckoutCartTotals\";\nimport CustomerInputs from \"../components/Checkout/Forms/CustomerInputs\";\nimport DeliveryOptions from \"../components/Checkout/Forms/DeliveryOptions\";\nimport PaymentOptions from \"../components/Checkout/Forms/Payments/PaymentOptions\";\nimport Alert from \"../components/UI/Alert/Alert\";\nimport PropTypes from \"prop-types\";\nimport formValidator from \"../Utility/formValidation\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport { currencyToUse } from \"../Utility/currency\";\n\nclass Checkout extends Component {\n  state = {\n    promoCode: \"\",\n    showAlert: false,\n    alertType: \"\",\n    alertMessage: \"\",\n    paymentMethod: \"creditCard\",\n    shippingPrice: 300,\n    usedDeliveryOption: 1,\n    makeOrder: false,\n    correctCardInfo: false,\n    customerInfo: {\n      firstName: {\n        value: \"\",\n        valid: false,\n        touched: false,\n        errorsMsg: \"\",\n      },\n      secondName: {\n        value: \"\",\n        valid: false,\n        touched: false,\n        errorsMsg: \"\",\n      },\n      email: {\n        value: \"\",\n        valid: false,\n        touched: false,\n        errorsMsg: \"\",\n      },\n    },\n  };\n\n  customerInfoChangeHandler = (event, identifier) => {\n    // use deep cloning to be able to get the values of nested objects\n    const customerInfo = { ...this.state.customerInfo };\n    const customerInfoField = { ...customerInfo[identifier] };\n    customerInfoField.value = event.target.value;\n    const validationResults = formValidator(\n      identifier,\n      customerInfoField.value\n    );\n    customerInfoField.valid = validationResults.isValid;\n    customerInfoField.errorsMsg = validationResults.errorsMsg;\n    customerInfoField.touched = true;\n    customerInfo[identifier] = customerInfoField;\n\n    let makeOrder = true;\n    for (let identifier in customerInfo) {\n      makeOrder = customerInfo[identifier].valid && makeOrder;\n    }\n    this.setState({ customerInfo: customerInfo, makeOrder: makeOrder });\n  };\n\n  promoCodeChangeHandler = (event) => {\n    this.setState({ promoCode: event.target.value });\n  };\n\n  paymentOptionChangeHandler = (event) => {\n    if (event.target.value === \"creditCard\") {\n      this.setState({ correctCardInfo: false });\n    } else {\n      this.setState({ correctCardInfo: true });\n    }\n    this.setState({ paymentMethod: event.target.value });\n  };\n\n  confirmOrderHandler = (event) => {\n    event.preventDefault();\n    let order = {};\n    order[\"cart\"] = this.props.cartProductsProps;\n    order[\"user\"] = {\n      firstName: this.state.customerInfo.firstName.value,\n      secondName: this.state.customerInfo.secondName.value,\n      email: this.state.customerInfo.email.value,\n    };\n    order[\"usedPromoCode\"] = this.state.promoCode;\n    order[\"currency\"] = this.props.usedCurrencyProp;\n    order[\"paymentMethod\"] = this.state.paymentMethod;\n    order[\"deliveryOption\"] = this.state.usedDeliveryOption;\n\n    // todo\n    // create stripe token for payments\n    this.props.confirmOrderProp(order);\n  };\n\n  setPromoCode = (event) => {\n    event.preventDefault();\n    // check promo code in state\n    let getPromoCode = this.props.promoCodeProp.filter(\n      (codeName) => codeName.code === this.state.promoCode\n    );\n\n    if (getPromoCode.length > 0) {\n      this.props.setPromoCodeProp(getPromoCode[0]);\n      this.setState({\n        showAlert: true,\n        alertType: \"alert-success\",\n        alertMessage: `The promo code you entered has given you a ${getPromoCode[0].percentage}% discount on the total price.`,\n      });\n    } else {\n      this.setState({\n        showAlert: true,\n        alertType: \"alert alert-danger\",\n        alertMessage: \"The Promo code you entered does not have discounts\",\n      });\n    }\n  };\n\n  closeAlertHandler = () => {\n    this.setState({\n      showAlert: !this.state.showAlert,\n      alertType: \"\",\n      alertMessage: \"\",\n    });\n  };\n\n  deliveryOptionChangeHandler = (event) => {\n    //get used delivery option from the state\n    let deliveryOption = this.props.deliveryOptions.find(\n      (option) => option.id === parseInt(event.target.value)\n    );\n    if (deliveryOption) {\n      this.setState({\n        usedDeliveryOption: parseInt(event.target.value),\n        shippingPrice: deliveryOption.cost,\n      });\n    }\n  };\n\n  creditCardHandler = (element) => {\n    if (element.complete) {\n      this.setState({ correctCardInfo: true });\n    }\n  };\n\n  render() {\n    let productsPrices = [];\n    let chosenPaymentMethod = null;\n    let currencyKeys = currencyToUse(this.props.usedCurrencyProp);\n    let currencyValue = currencyKeys.value;\n\n    const cartProducts = this.props.cartProductsProps.map(\n      (cartProduct, index) => {\n        // fetch product information from source based on id\n        let productFromStore = this.props.productsProps.find(\n          (product) => product.id === cartProduct.id\n        );\n        productsPrices.push({\n          price:\n            productFromStore.quantity > 0\n              ? Math.round(productFromStore.price * currencyValue)\n              : 0,\n          count: cartProduct.quantity,\n        });\n        return (\n          <CheckoutCartProduct\n            key={index}\n            checkoutProductName={productFromStore.name}\n            checkoutProductCategory={productFromStore.category}\n            checkoutProductPrice={Math.round(\n              productFromStore.price * currencyValue\n            )}\n            checkoutProductImage={productFromStore.img}\n            checkoutCartCount={cartProduct.quantity}\n            checkoutCartSize={cartProduct.size}\n            currency={this.props.usedCurrencyProp}\n          />\n        );\n      }\n    );\n\n    let shippingPrice = this.state.shippingPrice\n      ? Math.round(this.state.shippingPrice * currencyValue)\n      : 0;\n    let productTotals = productsPrices.reduce(\n      (acc, el) => acc + el.price * el.count,\n      0\n    );\n    let vatPercentage = this.props.vatProps > 0 ? this.props.vatProps / 100 : 0;\n    let vat = productTotals > 0 ? Math.round(productTotals * vatPercentage) : 0;\n    let percentageDiscount = this.props.usedPromoCodeProp\n      ? this.props.usedPromoCodeProp.percentage / 100\n      : 0;\n    let discountAmount = productTotals * percentageDiscount;\n    let shoppingTotal =\n      productTotals > 0\n        ? productTotals + vat + shippingPrice - discountAmount\n        : 0;\n\n    if (this.state.paymentMethod === \"creditCard\") {\n      chosenPaymentMethod = (\n        <div className={\"ml-4 p-3 shop-card-field\"}>\n          <CardElement\n            onChange={(element) => this.creditCardHandler(element)}\n          />\n        </div>\n      );\n    } else if (this.state.paymentMethod === \"onDelivery\") {\n      chosenPaymentMethod = (\n        <div className={\"ml-4 p-3\"}>\n          You will pay when the product is delivered to you.\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container py-4\">\n        {this.props.cartTotalProps <= 0 ? <Redirect to=\"/cart\" /> : null}\n\n        {this.state.showAlert ? (\n          <Alert\n            alertType={this.state.alertType}\n            closeAlert={this.closeAlertHandler}\n          >\n            {this.state.alertMessage}\n          </Alert>\n        ) : null}\n\n        <div className=\"row\">\n          <div className=\"col-md-4 order-md-2 mb-4\">\n            <h4 className=\"d-flex justify-content-between align-items-center mb-3\">\n              <span className=\"text-muted\">Order Review</span>\n              <span className=\"badge badge-secondary badge-pill\">\n                {this.props.cartTotalProps}\n              </span>\n            </h4>\n\n            <ul className=\"list-group mb-3\">\n              {/* items in cart */}\n              {cartProducts}\n\n              {/* used promo codes */}\n              {this.props.usedPromoCodeProp ? (\n                <PromoCodeValue\n                  currency={this.props.usedCurrencyProp}\n                  usedPromoCode={this.props.usedPromoCodeProp}\n                  discountAmount={discountAmount}\n                />\n              ) : null}\n\n              {/* checkout totals */}\n              <CheckoutCartTotals\n                productTotals={productTotals}\n                vat={vat}\n                shippingPrice={shippingPrice}\n                shoppingTotal={shoppingTotal}\n                currency={this.props.usedCurrencyProp}\n              />\n            </ul>\n\n            {/*promo code form */}\n            <PromoCodeForm\n              setPromoCode={this.setPromoCode}\n              promoCodeChangeHandler={(event) =>\n                this.promoCodeChangeHandler(event)\n              }\n              promoCode={this.state.promoCode}\n            />\n          </div>\n          <div className=\"col-md-8 order-md-1 \">\n            <h4 className=\"mb-3\">Billing Information</h4>\n            <form className=\"shop-form shop-bg-white p-3\" noValidate>\n              {/* customer details form fields */}\n              <CustomerInputs\n                customerInfo={this.state.customerInfo}\n                inputChanged={(event, identifier) =>\n                  this.customerInfoChangeHandler(event, identifier)\n                }\n              />\n              {/* delivery options selection fields */}\n              <h4 className=\"\">Delivery Options</h4>\n              <DeliveryOptions\n                currency={this.props.usedCurrencyProp}\n                deliveryOptions={this.props.deliveryOptions}\n                usedDeliveryOption={this.state.usedDeliveryOption}\n                deliveryOptionChanged={this.deliveryOptionChangeHandler}\n              />\n\n              <h4 className=\"mb-3\">Payment Method</h4>\n              {/* payment option selection field */}\n              <PaymentOptions\n                paymentMethod={this.state.paymentMethod}\n                paymentOptionChanged={this.paymentOptionChangeHandler}\n              />\n              {/* payment section */}\n              <div>{chosenPaymentMethod}</div>\n\n              <hr className=\"mb-4\" />\n              <button\n                disabled={!(this.state.makeOrder && this.state.correctCardInfo)}\n                className=\"btn shop-btn-secondary btn-lg btn-block\"\n                onClick={(event) => this.confirmOrderHandler(event)}\n              >\n                Confirm Order\n              </button>\n            </form>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nCheckout.propTypes = {\n  productsProps: PropTypes.array.isRequired,\n  cartProductsProps: PropTypes.array.isRequired,\n  cartTotalProps: PropTypes.number.isRequired,\n  promoCodeProp: PropTypes.array,\n  usedPromoCodeProp: PropTypes.object,\n  deliveryOptions: PropTypes.array.isRequired,\n  usedCurrencyProp: PropTypes.object.isRequired,\n  vatProps: PropTypes.number,\n};\n\nCheckout.defaultProps = {\n  shippingPriceProp: 0,\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    productsProps: state.products,\n    cartProductsProps: state.cart,\n    cartTotalProps: state.cartTotal,\n    vatProps: state.vat,\n    promoCodeProp: state.promoCode,\n    usedPromoCodeProp: state.usedPromoCode,\n    deliveryOptions: state.deliveryOptions,\n    usedCurrencyProp: state.usedCurrency,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    confirmOrderProp: (order) => dispatch(confirmOrder(order, ownProps)),\n    setPromoCodeProp: (promoCode, percentage) =>\n      dispatch(setPromoCode(promoCode, percentage)),\n  };\n};\n\n// inject stripe prop into the component\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(injectStripe(Checkout));\n"]},"metadata":{},"sourceType":"module"}